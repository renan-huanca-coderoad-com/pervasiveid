[{"id":"7cefeef6.13cf","type":"mqtt-broker","z":"1efcb567.ee971b","broker":"localhost","port":"1883","clientid":"","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willRetain":null,"willPayload":"","birthTopic":"","birthQos":"0","birthRetain":null,"birthPayload":""},{"id":"86e76f90.d0e4f","type":"mqtt-broker","z":"62064590.bdb24c","broker":"localhost","port":"1883","clientid":"","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willRetain":null,"willPayload":"","birthTopic":"","birthQos":"0","birthRetain":null,"birthPayload":""},{"id":"e38d3728.730328","type":"subflow","name":"ZoneDwellFilter","info":"The Zone Dwell Filter (aka DuPont)","in":[{"x":260,"y":120,"wires":[{"id":"bd3d92d8.4f3dd"}]}],"out":[{"x":620,"y":180,"wires":[{"id":"bd3d92d8.4f3dd","port":0},{"id":"9ae2f667.087b18","port":0}]}]},{"id":"bd3d92d8.4f3dd","type":"function","z":"e38d3728.730328","name":"ZoneDwellFilter","func":"var zdf = flow.get( \"zdf\" );\n\nvar blinks = [];\nfor( var i = 0; i < msg.payload.length; i++ )\n{\n    var blink = msg.payload[i];\n   \n    // required fields: timestamp, x, y, zone, blink\n    var b = {};\n    b.time = blink.timestamp;\n    b.x = blink.x || 0;\n    b.y = blink.y || 0;\n    b.zone = blink.zone || \"ZONE\";\n    // save the orignal blink\n    b.blink = blink;\n    \n    var out = zdf.filter( blink.serialNumber, b );\n    \n    if( out )\n    {\n        blinks.push( blink );\n    }\n    else\n    {\n        node.log( \"dropped\" );\n    }\n}\n\nif( blinks.length > 0 )\n{\n    return { 'payload' : blinks };\n}\nelse\n{\n    return null;\n}\n\n","outputs":1,"noerr":0,"x":440,"y":120,"wires":[[]]},{"id":"351ecc8.0d52a34","type":"inject","z":"e38d3728.730328","name":"DwellTimeCheckThread","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":true,"x":200,"y":220,"wires":[["9ae2f667.087b18"]]},{"id":"9ae2f667.087b18","type":"function","z":"e38d3728.730328","name":"CheckDwellTime","func":"var zdf = flow.get( \"zdf\" );\n\nif( zdf === undefined )\n{\n    var ZoneDwellFilter = global.get( \"zoneDwellFilter\" );\n    zdf = new ZoneDwellFilter();\n    flow.set( \"zdf\", zdf );\n}\n\n//node.log( \"dwelltime check=\" + msg.payload );\n    \nvar blinks = zdf.checkDwellTime( msg.payload );\n\nvar out = []\nfor( var i = 0; i < blinks.length; i++ )\n{\n       out.push( blinks[i].blink );\n}\n\nif( blinks.length > 0 )\n{\n    return { 'payload' : out };\n}\n\nreturn null;\n\n","outputs":1,"noerr":0,"x":430,"y":220,"wires":[[]]},{"id":"1efcb567.ee971b","type":"subflow","name":"Half Bridge","info":"","in":[{"x":80,"y":200,"wires":[{"id":"ac800c87.ecac"}]}],"out":[{"x":1220,"y":340,"wires":[{"id":"bb26d243.b391f","port":0}]}]},{"id":"5e2e0459.59ed3c","type":"subflow:e38d3728.730328","z":"1efcb567.ee971b","name":"","x":500,"y":200,"wires":[["5a0ac826.e3f9d8"]]},{"id":"3fd2f5fe.056d3a","type":"mqtt out","z":"1efcb567.ee971b","name":"Publish MQTT","topic":"","qos":"2","retain":"","broker":"86e76f90.d0e4f","x":1160,"y":200,"wires":[]},{"id":"eb1b5172.fb35","type":"function","z":"1efcb567.ee971b","name":"Pre Publish MQTT","func":"/*\n * 1. set the message topic\n * 2. prepends a sequence number to the message body\n */\n\nvar bridgeCode = \"ALEB\";\nvar ttc = flow.get( 'thingTypeCode' );\n\n//TODO: check for empty message set ?\n\nmsg.topic = \"/v1/data/\" + bridgeCode + \"/\" + ttc ;\n\nvar seqnum = flow.get( 'seqnum' ) || {};\nif( seqnum[ttc] === undefined )\n{\n    seqnum[ttc] = 0;\n}\nseqnum[ttc]++;\nflow.set( 'seqnum', seqnum );\nmsg.payload = \"sn,\" + seqnum[ttc] + \"\\n\" + msg.payload;\n\nnode.log( \"seqnum=\" + JSON.stringify( seqnum ) );\n//node.warn( \"msg.payload=\" + JSON.stringify( msg.payload ) )\n\nreturn msg;\n","outputs":"1","noerr":0,"x":930,"y":200,"wires":[["3fd2f5fe.056d3a"]]},{"id":"ac800c87.ecac","type":"function","z":"1efcb567.ee971b","name":"Split by ThingTypeCode","func":"/**\n * Groups messages by thingTypeCode\n * \n * Send a separate msg for each thingTypeCode\n */\n \nif( msg.payload == null )\n{\n    return;\n}\n \nvar map = new Object();\n \nvar count = 0;\nfor( var i = 0; i < msg.payload.length; i++ )\n{\n    var ttc = msg.payload[i].thingTypeCode;\n    if( map[ttc] === undefined )\n    {\n        map[ttc] = [];\n    }\n    map[ttc].push( msg.payload[i] );\n    count++;\n}\n\n//var str = \"thingType_count=\" + count;\n//node.status( { fill : \"green\", shape : \"dot\", text : str } );\nnode.status( {} );\n\nfor( var ttc in map )\n{\n    //node.warn( \"adding \" + ttc );\n    flow.set( 'thingTypeCode', ttc );\n    node.send({ payload : map[ttc] } )\n    //msg.push( msg );\n}\n\nreturn;","outputs":"1","noerr":0,"x":270,"y":200,"wires":[["5e2e0459.59ed3c"]]},{"id":"571e9438.36770c","type":"mqtt in","z":"1efcb567.ee971b","name":"","topic":"/v1/config/ALEB","broker":"7cefeef6.13cf","x":140,"y":340,"wires":[["42c8307b.6cac7"]]},{"id":"42c8307b.6cac7","type":"function","z":"1efcb567.ee971b","name":"Update Configuration (TODO)","func":"\n\nflow.set( 'config', msg.payload );\n\nnode.log( \"msg.payload=\" + JSON.stringify( msg.payload ) );\n\nreturn msg;","outputs":"0","noerr":0,"x":410,"y":340,"wires":[]},{"id":"5a0ac826.e3f9d8","type":"function","z":"1efcb567.ee971b","name":"Object to CSV","func":"/*\n*  converts a list of things into a list of UDF CSV strings\n*/\n\nvar str = \"\";\n\nfor( var i = 0; i < msg.payload.length; i++ )\n{\n    var thing = msg.payload[i];\n    for( var udf in thing )\n    {\n        if( udf != 'serialNumber' && udf != 'timestamp' )\n        var value = thing[udf];\n        str += thing.serialNumber + \",\" + thing.timestamp + \",\" + udf + \",\" + value + \"\\n\";\n    }\n}\n\nmsg.payload = str;\n\n//console.warn( \"body=\" + str );\n\nreturn msg;","outputs":"1","noerr":0,"x":720,"y":200,"wires":[["eb1b5172.fb35"]]},{"id":"26563951.19a826","type":"mqtt in","z":"1efcb567.ee971b","name":"HazelCast Cache","topic":"/v1/config/thingCache","broker":"86e76f90.d0e4f","x":140,"y":500,"wires":[["c4b6ef66.09a12"]]},{"id":"c4b6ef66.09a12","type":"function","z":"1efcb567.ee971b","name":"ThingCache (TODO)","func":"\nreturn msg;","outputs":"0","noerr":0,"x":380,"y":500,"wires":[]},{"id":"1b34eae3.bcbcc5","type":"comment","z":"1efcb567.ee971b","name":"Configuration Listener","info":"","x":160,"y":300,"wires":[]},{"id":"227a63ef.83e22c","type":"comment","z":"1efcb567.ee971b","name":"ThingCache (allows for 'native filters' access to all thing UDFs, if needed)","info":"","x":320,"y":460,"wires":[]},{"id":"88c3ceab.96e44","type":"comment","z":"1efcb567.ee971b","name":"Main Flow","info":"Entry POint","x":120,"y":160,"wires":[]},{"id":"1bfa7b6d.909195","type":"catch","z":"1efcb567.ee971b","name":"","scope":null,"x":880,"y":340,"wires":[["bb26d243.b391f"]]},{"id":"bb26d243.b391f","type":"function","z":"1efcb567.ee971b","name":"TODO","func":"\n/*\n*  TODO\n*/\n\nreturn msg;","outputs":1,"noerr":0,"x":1050,"y":340,"wires":[[]]},{"id":"c79abf6d.3ab19","type":"http in","z":"658a989c.3c9888","name":"HTTP INPUT","url":"/","method":"post","swaggerDoc":"","x":110,"y":240,"wires":[["1e2500ad.969a2f","35323074.efe91"]]},{"id":"35323074.efe91","type":"http response","z":"658a989c.3c9888","name":"","x":310,"y":180,"wires":[]},{"id":"ae9f2362.da804","type":"comment","z":"658a989c.3c9888","name":"Entry Point","info":"Entry POint","x":100,"y":200,"wires":[]},{"id":"af9d0d4.2968bf","type":"subflow:1efcb567.ee971b","z":"658a989c.3c9888","name":"","x":850,"y":240,"wires":[[]]},{"id":"d1f7124f.616db","type":"function","z":"658a989c.3c9888","name":"Mapper","func":"\nvar a = msg.payload['ale:ECReports'];\nvar b = a['reports'];\nvar c = b[0]['report'];\nvar d = c[0]['group'];\nvar e = d[0]['groupList'];\n\nout = [];\nfor( var i = 0; i < e.length; i++ )\n{\n    node.log( \"xml=\" + JSON.stringify( e[i] ) );\n    var member = e[i]['member'];\n    node.log( \"member=\" + JSON.stringify( member ) );\n    var timestamp = member[0]['$']['ale_mojix_ext:ts'];\n    var lr = member[0]['$']['ale_mojix_ext:logicalReader'];\n    var x = member[0]['$']['ale_mojix_ext:posX'];\n    var y = member[0]['$']['ale_mojix_ext:posY'];\n    var z = member[0]['$']['ale_mojix_ext:posZ'];\n\n    var rawHex = member[0]['rawHex'][0];\n    var serialNumber = rawHex;\n    \n    node.log( \"timestamp=\" + timestamp );\n    node.log( \"lr=\" + lr );\n    node.log( \"x=\" + x );\n    node.log( \"y=\" + y );\n    node.log( \"z=\" + z );\n    \n    node.log( \"serialNumber=\" + serialNumber );\n    \n    out.push( { 'serialNumber' : serialNumber, 'x' : x, 'y' : y, 'z' : z, 'logicalReader' : lr } );\n}\n\nreturn { 'payload' : out };\n","outputs":1,"noerr":0,"x":640,"y":240,"wires":[["af9d0d4.2968bf"]]},{"id":"61d16bc0.6a7604","type":"xml","z":"658a989c.3c9888","name":"","attr":"","chr":"","x":470,"y":240,"wires":[["d1f7124f.616db"]]},{"id":"1e2500ad.969a2f","type":"function","z":"658a989c.3c9888","name":"strip","func":"\n\n//node.log( \"post=\" + JSON.stringify( msg.payload ) );\n\n// strip first line from xml\n\nvar res = msg.payload.split( \"\\n\" );\nvar out = \"\";\nfor( var i = 1; i < out.length; i++ )\n{\n    out += res[i]\n}\nnode.log( \"post=\" + JSON.stringify( msg.payload ) );\n\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":240,"wires":[["61d16bc0.6a7604"]]}]